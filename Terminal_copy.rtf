{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww35800\viewh19840\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs26 \cf0  kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform plan                                                                       \u57522  \u10004  \u57522  630 \u57522  22:34:06 \
\uc0\u9591 \
\uc0\u9474  Error: Inconsistent dependency lock file\
\uc0\u9474  \
\uc0\u9474  The following dependency selections recorded in the lock file are inconsistent with the current configuration:\
\uc0\u9474    - provider registry.terraform.io/hashicorp/aws: required by this configuration but no version is selected\
\uc0\u9474  \
\uc0\u9474  To make the initial dependency selections that will initialize the dependency lock file, run:\
\uc0\u9474    terraform init\
\uc0\u9589 \
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform init                                                                     \u57522  1 \u8629  \u57522  631 \u57522  22:34:18 \
\
Initializing the backend...\ 
\
Initializing provider plugins...\
- Finding hashicorp/aws versions matching "5.41.0"...\
- Installing hashicorp/aws v5.41.0...\
- Installed hashicorp/aws v5.41.0 (signed by HashiCorp)\
\
Terraform has created a lock file .terraform.lock.hcl to record the provider\
selections it made above. Include this file in your version control repository\
so that Terraform can guarantee to make the same selections by default when\
you run "terraform init" in the future.\
\
Terraform has been successfully initialized!\
\
You may now begin working with Terraform. Try running "terraform plan" to see\
any changes that are required for your infrastructure. All Terraform commands\
should now work.\
\
If you ever set or change modules or backend configuration for Terraform,\
rerun this command to reinitialize your working directory. If you forget, other\
commands will detect it and remind you to do so if necessary.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform plan                                                                       \u57522  \u10004  \u57522  632 \u57522  22:35:11 \
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  + create\
\
Terraform will perform the following actions:\
\
  # aws_s3_bucket.mys3bucket will be created\
  + resource "aws_s3_bucket" "mys3bucket" \{\
      + acceleration_status         = (known after apply)\
      + acl                         = (known after apply)\
      + arn                         = (known after apply)\
      + bucket                      = "mys3bucketproject2023"\
      + bucket_domain_name          = (known after apply)\
      + bucket_prefix               = (known after apply)\
      + bucket_regional_domain_name = (known after apply)\
      + force_destroy               = false\
      + hosted_zone_id              = (known after apply)\
      + id                          = (known after apply)\
      + object_lock_enabled         = (known after apply)\
      + policy                      = (known after apply)\
      + region                      = (known after apply)\
      + request_payer               = (known after apply)\
      + tags_all                    = (known after apply)\
      + website_domain              = (known after apply)\
      + website_endpoint            = (known after apply)\
    \}\
\
Plan: 1 to add, 0 to change, 0 to destroy.\
\
\uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
\
Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform apply                                                                      \u57522  \u10004  \u57522  633 \u57522  22:37:13 \
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  + create\
\
Terraform will perform the following actions:\
\
  # aws_s3_bucket.mys3bucket will be created\
  + resource "aws_s3_bucket" "mys3bucket" \{\
      + acceleration_status         = (known after apply)\
      + acl                         = (known after apply)\
      + arn                         = (known after apply)\
      + bucket                      = "mys3bucketproject2023"\
      + bucket_domain_name          = (known after apply)\
      + bucket_prefix               = (known after apply)\
      + bucket_regional_domain_name = (known after apply)\
      + force_destroy               = false\
      + hosted_zone_id              = (known after apply)\
      + id                          = (known after apply)\
      + object_lock_enabled         = (known after apply)\
      + policy                      = (known after apply)\
      + region                      = (known after apply)\
      + request_payer               = (known after apply)\
      + tags_all                    = (known after apply)\
      + website_domain              = (known after apply)\
      + website_endpoint            = (known after apply)\
    \}\
\
Plan: 1 to add, 0 to change, 0 to destroy.\
\
Do you want to perform these actions?\
  Terraform will perform the actions described above.\
  Only 'yes' will be accepted to approve.\
\
  Enter a value: yes\
\
aws_s3_bucket.mys3bucket: Creating...\
aws_s3_bucket.mys3bucket: Creation complete after 7s [id=mys3bucketproject2023]\
\
Apply complete! Resources: 1 added, 0 changed, 0 destroyed.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform apply -auto-approve                                                        \u57522  \u10004  \u57522  634 \u57522  22:37:50 \
aws_s3_bucket.mys3bucket: Refreshing state... [id=mys3bucketproject2023]\
\
No changes. Your infrastructure matches the configuration.\
\
Terraform has compared your real infrastructure against your configuration and found no differences, so no changes are needed.\
\
Apply complete! Resources: 0 added, 0 changed, 0 destroyed.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform plan                                                                       \u57522  \u10004  \u57522  635 \u57522  22:47:37 \
aws_s3_bucket.mys3bucket: Refreshing state... [id=mys3bucketproject2023]\
\
No changes. Your infrastructure matches the configuration.\
\
Terraform has compared your real infrastructure against your configuration and found no differences, so no changes are needed.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform fmt                                                                        \u57522  \u10004  \u57522  636 \u57522  22:48:07 \
provider.tf\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform destory                                                                    \u57522  \u10004  \u57522  637 \u57522  22:49:55 \
Terraform has no command named "destory". Did you mean "destroy"?\
\
To see all of Terraform's top-level commands, run:\
  terraform -help\
\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform destroy                                                                  \u57522  1 \u8629  \u57522  638 \u57522  22:51:17 \
aws_s3_bucket.mys3bucket: Refreshing state... [id=mys3bucketproject2023]\
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  - destroy\
\
Terraform will perform the following actions:\
\
  # aws_s3_bucket.mys3bucket will be destroyed\
  - resource "aws_s3_bucket" "mys3bucket" \{\
      - arn                         = "arn:aws:s3:::mys3bucketproject2023" -> null\
      - bucket                      = "mys3bucketproject2023" -> null\
      - bucket_domain_name          = "mys3bucketproject2023.s3.amazonaws.com" -> null\
      - bucket_regional_domain_name = "mys3bucketproject2023.s3.us-east-1.amazonaws.com" -> null\
      - force_destroy               = false -> null\
      - hosted_zone_id              = "Z3AQBSTGFYJSTF" -> null\
      - id                          = "mys3bucketproject2023" -> null\
      - object_lock_enabled         = false -> null\
      - region                      = "us-east-1" -> null\
      - request_payer               = "BucketOwner" -> null\
      - tags                        = \{\} -> null\
      - tags_all                    = \{\} -> null\
\
      - grant \{\
          - id          = "8ca262d0cc91fdf253004aef39e9d246ad237abb87244abd1e082801e16919a3" -> null\
          - permissions = [\
              - "FULL_CONTROL",\
            ] -> null\
          - type        = "CanonicalUser" -> null\
        \}\
\
      - server_side_encryption_configuration \{\
          - rule \{\
              - bucket_key_enabled = false -> null\
\
              - apply_server_side_encryption_by_default \{\
                  - sse_algorithm = "AES256" -> null\
                \}\
            \}\
        \}\
\
      - versioning \{\
          - enabled    = false -> null\
          - mfa_delete = false -> null\
        \}\
    \}\
\
Plan: 0 to add, 0 to change, 1 to destroy.\
\
Do you really want to destroy all resources?\
  Terraform will destroy all your managed infrastructure, as shown above.\
  There is no undo. Only 'yes' will be accepted to confirm.\
\
  Enter a value: yes\
\
aws_s3_bucket.mys3bucket: Destroying... [id=mys3bucketproject2023]\
aws_s3_bucket.mys3bucket: Destruction complete after 2s\
\
Destroy complete! Resources: 1 destroyed.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform plan                                                                       \u57522  \u10004  \u57522  639 \u57522  22:52:05 \
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  + create\
\
Terraform will perform the following actions:\
\
  # aws_s3_bucket.mys3bucket will be created\
  + resource "aws_s3_bucket" "mys3bucket" \{\
      + acceleration_status         = (known after apply)\
      + acl                         = (known after apply)\
      + arn                         = (known after apply)\
      + bucket                      = "mys3bucketproject2023"\
      + bucket_domain_name          = (known after apply)\
      + bucket_prefix               = (known after apply)\
      + bucket_regional_domain_name = (known after apply)\
      + force_destroy               = false\
      + hosted_zone_id              = (known after apply)\
      + id                          = (known after apply)\
      + object_lock_enabled         = (known after apply)\
      + policy                      = (known after apply)\
      + region                      = (known after apply)\
      + request_payer               = (known after apply)\
      + tags_all                    = (known after apply)\
      + website_domain              = (known after apply)\
      + website_endpoint            = (known after apply)\
    \}\
\
Plan: 1 to add, 0 to change, 0 to destroy.\
\
\uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
\
Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform plan                                                                       \u57522  \u10004  \u57522  640 \u57522  22:52:24 \
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  + create\
\
Terraform will perform the following actions:\
\
  # aws_s3_bucket.mys3bucket will be created\
  + resource "aws_s3_bucket" "mys3bucket" \{\
      + acceleration_status         = (known after apply)\
      + acl                         = (known after apply)\
      + arn                         = (known after apply)\
      + bucket                      = "mys3bucketproject2023"\
      + bucket_domain_name          = (known after apply)\
      + bucket_prefix               = (known after apply)\
      + bucket_regional_domain_name = (known after apply)\
      + force_destroy               = false\
      + hosted_zone_id              = (known after apply)\
      + id                          = (known after apply)\
      + object_lock_enabled         = (known after apply)\
      + policy                      = (known after apply)\
      + region                      = (known after apply)\
      + request_payer               = (known after apply)\
      + tags_all                    = (known after apply)\
      + website_domain              = (known after apply)\
      + website_endpoint            = (known after apply)\
    \}\
\
Plan: 1 to add, 0 to change, 0 to destroy.\
\
\uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
\
Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform apply -auto-approve                                                        \u57522  \u10004  \u57522  640 \u57522  22:53:11 \
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  + create\
\
Terraform will perform the following actions:\
\
  # aws_s3_bucket.mys3bucket will be created\
  + resource "aws_s3_bucket" "mys3bucket" \{\
      + acceleration_status         = (known after apply)\
      + acl                         = (known after apply)\
      + arn                         = (known after apply)\
      + bucket                      = "mys3bucketproject2023"\
      + bucket_domain_name          = (known after apply)\
      + bucket_prefix               = (known after apply)\
      + bucket_regional_domain_name = (known after apply)\
      + force_destroy               = false\
      + hosted_zone_id              = (known after apply)\
      + id                          = (known after apply)\
      + object_lock_enabled         = (known after apply)\
      + policy                      = (known after apply)\
      + region                      = (known after apply)\
      + request_payer               = (known after apply)\
      + tags_all                    = (known after apply)\
      + website_domain              = (known after apply)\
      + website_endpoint            = (known after apply)\
    \}\
\
Plan: 1 to add, 0 to change, 0 to destroy.\
aws_s3_bucket.mys3bucket: Creating...\
aws_s3_bucket.mys3bucket: Creation complete after 6s [id=mys3bucketproject2023]\
\
Apply complete! Resources: 1 added, 0 changed, 0 destroyed.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform plan                                                                       \u57522  \u10004  \u57522  641 \u57522  22:53:42 \
aws_s3_bucket.mys3bucket: Refreshing state... [id=mys3bucketproject2023]\
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  + create\
\
Terraform will perform the following actions:\
\
  # aws_s3_bucket_acl.bucket-acl will be created\
  + resource "aws_s3_bucket_acl" "bucket-acl" \{\
      + acl    = "public-read"\
      + bucket = "mys3bucketproject2023"\
      + id     = (known after apply)\
    \}\
\
  # aws_s3_bucket_ownership_controls.bucketowner will be created\
  + resource "aws_s3_bucket_ownership_controls" "bucketowner" \{\
      + bucket = "mys3bucketproject2023"\
      + id     = (known after apply)\
\
      + rule \{\
          + object_ownership = "BucketOwnerPreferred"\
        \}\
    \}\
\
  # aws_s3_bucket_public_access_block.access-block will be created\
  + resource "aws_s3_bucket_public_access_block" "access-block" \{\
      + block_public_acls       = false\
      + block_public_policy     = false\
      + bucket                  = "mys3bucketproject2023"\
      + id                      = (known after apply)\
      + ignore_public_acls      = false\
      + restrict_public_buckets = false\
    \}\
\
Plan: 3 to add, 0 to change, 0 to destroy.\
\
\uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
\
Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform apply -auto-approve                                                        \u57522  \u10004  \u57522  642 \u57522  22:55:11 \
aws_s3_bucket.mys3bucket: Refreshing state... [id=mys3bucketproject2023]\
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  + create\
\
Terraform will perform the following actions:\
\
  # aws_s3_bucket_acl.bucket-acl will be created\
  + resource "aws_s3_bucket_acl" "bucket-acl" \{\
      + acl    = "public-read"\
      + bucket = "mys3bucketproject2023"\
      + id     = (known after apply)\
    \}\
\
  # aws_s3_bucket_ownership_controls.bucketowner will be created\
  + resource "aws_s3_bucket_ownership_controls" "bucketowner" \{\
      + bucket = "mys3bucketproject2023"\
      + id     = (known after apply)\
\
      + rule \{\
          + object_ownership = "BucketOwnerPreferred"\
        \}\
    \}\
\
  # aws_s3_bucket_public_access_block.access-block will be created\
  + resource "aws_s3_bucket_public_access_block" "access-block" \{\
      + block_public_acls       = false\
      + block_public_policy     = false\
      + bucket                  = "mys3bucketproject2023"\
      + id                      = (known after apply)\
      + ignore_public_acls      = false\
      + restrict_public_buckets = false\
    \}\
\
Plan: 3 to add, 0 to change, 0 to destroy.\
aws_s3_bucket_public_access_block.access-block: Creating...\
aws_s3_bucket_ownership_controls.bucketowner: Creating...\
aws_s3_bucket_ownership_controls.bucketowner: Creation complete after 2s [id=mys3bucketproject2023]\
aws_s3_bucket_public_access_block.access-block: Creation complete after 2s [id=mys3bucketproject2023]\
aws_s3_bucket_acl.bucket-acl: Creating...\
aws_s3_bucket_acl.bucket-acl: Creation complete after 1s [id=mys3bucketproject2023,public-read]\
\
Apply complete! Resources: 3 added, 0 changed, 0 destroyed.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform plan                                                                       \u57522  \u10004  \u57522  643 \u57522  22:55:44 \
aws_s3_bucket.mys3bucket: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_bucket_public_access_block.access-block: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_bucket_ownership_controls.bucketowner: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_bucket_acl.bucket-acl: Refreshing state... [id=mys3bucketproject2023,public-read]\
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  + create\
\
Terraform will perform the following actions:\
\
  # aws_s3_object.error will be created\
  + resource "aws_s3_object" "error" \{\
      + acl                    = "public-read"\
      + arn                    = (known after apply)\
      + bucket                 = "mys3bucketproject2023"\
      + bucket_key_enabled     = (known after apply)\
      + checksum_crc32         = (known after apply)\
      + checksum_crc32c        = (known after apply)\
      + checksum_sha1          = (known after apply)\
      + checksum_sha256        = (known after apply)\
      + content_type           = "text/html"\
      + etag                   = (known after apply)\
      + force_destroy          = false\
      + id                     = (known after apply)\
      + key                    = "error.html"\
      + kms_key_id             = (known after apply)\
      + server_side_encryption = (known after apply)\
      + source                 = "error.html"\
      + storage_class          = (known after apply)\
      + tags_all               = (known after apply)\
      + version_id             = (known after apply)\
    \}\
\
  # aws_s3_object.index will be created\
  + resource "aws_s3_object" "index" \{\
      + acl                    = "public-read"\
      + arn                    = (known after apply)\
      + bucket                 = "mys3bucketproject2023"\
      + bucket_key_enabled     = (known after apply)\
      + checksum_crc32         = (known after apply)\
      + checksum_crc32c        = (known after apply)\
      + checksum_sha1          = (known after apply)\
      + checksum_sha256        = (known after apply)\
      + content_type           = "text/html"\
      + etag                   = (known after apply)\
      + force_destroy          = false\
      + id                     = (known after apply)\
      + key                    = "index.html"\
      + kms_key_id             = (known after apply)\
      + server_side_encryption = (known after apply)\
      + source                 = "index.html"\
      + storage_class          = (known after apply)\
      + tags_all               = (known after apply)\
      + version_id             = (known after apply)\
    \}\
\
  # aws_s3_object.profile1 will be created\
  + resource "aws_s3_object" "profile1" \{\
      + acl                    = "public-read"\
      + arn                    = (known after apply)\
      + bucket                 = "mys3bucketproject2023"\
      + bucket_key_enabled     = (known after apply)\
      + checksum_crc32         = (known after apply)\
      + checksum_crc32c        = (known after apply)\
      + checksum_sha1          = (known after apply)\
      + checksum_sha256        = (known after apply)\
      + content_type           = (known after apply)\
      + etag                   = (known after apply)\
      + force_destroy          = false\
      + id                     = (known after apply)\
      + key                    = "profile1.png"\
      + kms_key_id             = (known after apply)\
      + server_side_encryption = (known after apply)\
      + source                 = "profile1.png"\
      + storage_class          = (known after apply)\
      + tags_all               = (known after apply)\
      + version_id             = (known after apply)\
    \}\
\
  # aws_s3_object.profile2 will be created\
  + resource "aws_s3_object" "profile2" \{\
      + acl                    = "public-read"\
      + arn                    = (known after apply)\
      + bucket                 = "mys3bucketproject2023"\
      + bucket_key_enabled     = (known after apply)\
      + checksum_crc32         = (known after apply)\
      + checksum_crc32c        = (known after apply)\
      + checksum_sha1          = (known after apply)\
      + checksum_sha256        = (known after apply)\
      + content_type           = (known after apply)\
      + etag                   = (known after apply)\
      + force_destroy          = false\
      + id                     = (known after apply)\
      + key                    = "profile2.png"\
      + kms_key_id             = (known after apply)\
      + server_side_encryption = (known after apply)\
      + source                 = "profile2.png"\
      + storage_class          = (known after apply)\
      + tags_all               = (known after apply)\
      + version_id             = (known after apply)\
    \}\
\
  # aws_s3_object.profile3 will be created\
  + resource "aws_s3_object" "profile3" \{\
      + acl                    = "public-read"\
      + arn                    = (known after apply)\
      + bucket                 = "mys3bucketproject2023"\
      + bucket_key_enabled     = (known after apply)\
      + checksum_crc32         = (known after apply)\
      + checksum_crc32c        = (known after apply)\
      + checksum_sha1          = (known after apply)\
      + checksum_sha256        = (known after apply)\
      + content_type           = (known after apply)\
      + etag                   = (known after apply)\
      + force_destroy          = false\
      + id                     = (known after apply)\
      + key                    = "profile3.png"\
      + kms_key_id             = (known after apply)\
      + server_side_encryption = (known after apply)\
      + source                 = "profile3.png"\
      + storage_class          = (known after apply)\
      + tags_all               = (known after apply)\
      + version_id             = (known after apply)\
    \}\
\
Plan: 5 to add, 0 to change, 0 to destroy.\
\
\uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
\
Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform apply" now.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform apply -auto-approve                                                        \u57522  \u10004  \u57522  644 \u57522  23:10:58 \
aws_s3_bucket.mys3bucket: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_bucket_ownership_controls.bucketowner: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_bucket_public_access_block.access-block: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_bucket_acl.bucket-acl: Refreshing state... [id=mys3bucketproject2023,public-read]\
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  + create\
\
Terraform will perform the following actions:\
\
  # aws_s3_object.error will be created\
  + resource "aws_s3_object" "error" \{\
      + acl                    = "public-read"\
      + arn                    = (known after apply)\
      + bucket                 = "mys3bucketproject2023"\
      + bucket_key_enabled     = (known after apply)\
      + checksum_crc32         = (known after apply)\
      + checksum_crc32c        = (known after apply)\
      + checksum_sha1          = (known after apply)\
      + checksum_sha256        = (known after apply)\
      + content_type           = "text/html"\
      + etag                   = (known after apply)\
      + force_destroy          = false\
      + id                     = (known after apply)\
      + key                    = "error.html"\
      + kms_key_id             = (known after apply)\
      + server_side_encryption = (known after apply)\
      + source                 = "error.html"\
      + storage_class          = (known after apply)\
      + tags_all               = (known after apply)\
      + version_id             = (known after apply)\
    \}\
\
  # aws_s3_object.index will be created\
  + resource "aws_s3_object" "index" \{\
      + acl                    = "public-read"\
      + arn                    = (known after apply)\
      + bucket                 = "mys3bucketproject2023"\
      + bucket_key_enabled     = (known after apply)\
      + checksum_crc32         = (known after apply)\
      + checksum_crc32c        = (known after apply)\
      + checksum_sha1          = (known after apply)\
      + checksum_sha256        = (known after apply)\
      + content_type           = "text/html"\
      + etag                   = (known after apply)\
      + force_destroy          = false\
      + id                     = (known after apply)\
      + key                    = "index.html"\
      + kms_key_id             = (known after apply)\
      + server_side_encryption = (known after apply)\
      + source                 = "index.html"\
      + storage_class          = (known after apply)\
      + tags_all               = (known after apply)\
      + version_id             = (known after apply)\
    \}\
\
  # aws_s3_object.profile1 will be created\
  + resource "aws_s3_object" "profile1" \{\
      + acl                    = "public-read"\
      + arn                    = (known after apply)\
      + bucket                 = "mys3bucketproject2023"\
      + bucket_key_enabled     = (known after apply)\
      + checksum_crc32         = (known after apply)\
      + checksum_crc32c        = (known after apply)\
      + checksum_sha1          = (known after apply)\
      + checksum_sha256        = (known after apply)\
      + content_type           = (known after apply)\
      + etag                   = (known after apply)\
      + force_destroy          = false\
      + id                     = (known after apply)\
      + key                    = "profile1.png"\
      + kms_key_id             = (known after apply)\
      + server_side_encryption = (known after apply)\
      + source                 = "profile1.png"\
      + storage_class          = (known after apply)\
      + tags_all               = (known after apply)\
      + version_id             = (known after apply)\
    \}\
\
  # aws_s3_object.profile2 will be created\
  + resource "aws_s3_object" "profile2" \{\
      + acl                    = "public-read"\
      + arn                    = (known after apply)\
      + bucket                 = "mys3bucketproject2023"\
      + bucket_key_enabled     = (known after apply)\
      + checksum_crc32         = (known after apply)\
      + checksum_crc32c        = (known after apply)\
      + checksum_sha1          = (known after apply)\
      + checksum_sha256        = (known after apply)\
      + content_type           = (known after apply)\
      + etag                   = (known after apply)\
      + force_destroy          = false\
      + id                     = (known after apply)\
      + key                    = "profile2.png"\
      + kms_key_id             = (known after apply)\
      + server_side_encryption = (known after apply)\
      + source                 = "profile2.png"\
      + storage_class          = (known after apply)\
      + tags_all               = (known after apply)\
      + version_id             = (known after apply)\
    \}\
\
  # aws_s3_object.profile3 will be created\
  + resource "aws_s3_object" "profile3" \{\
      + acl                    = "public-read"\
      + arn                    = (known after apply)\
      + bucket                 = "mys3bucketproject2023"\
      + bucket_key_enabled     = (known after apply)\
      + checksum_crc32         = (known after apply)\
      + checksum_crc32c        = (known after apply)\
      + checksum_sha1          = (known after apply)\
      + checksum_sha256        = (known after apply)\
      + content_type           = (known after apply)\
      + etag                   = (known after apply)\
      + force_destroy          = false\
      + id                     = (known after apply)\
      + key                    = "profile3.png"\
      + kms_key_id             = (known after apply)\
      + server_side_encryption = (known after apply)\
      + source                 = "profile3.png"\
      + storage_class          = (known after apply)\
      + tags_all               = (known after apply)\
      + version_id             = (known after apply)\
    \}\
\
Plan: 5 to add, 0 to change, 0 to destroy.\
aws_s3_object.error: Creating...\
aws_s3_object.index: Creating...\
aws_s3_object.profile2: Creating...\
aws_s3_object.profile1: Creating...\
aws_s3_object.profile3: Creating...\
aws_s3_object.error: Creation complete after 3s [id=error.html]\
aws_s3_object.index: Creation complete after 3s [id=index.html]\
aws_s3_object.profile2: Creation complete after 3s [id=profile2.png]\
aws_s3_object.profile1: Creation complete after 3s [id=profile1.png]\
aws_s3_object.profile3: Creation complete after 4s [id=profile3.png]\
\
Apply complete! Resources: 5 added, 0 changed, 0 destroyed.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform apply -auto-approve                                                        \u57522  \u10004  \u57522  645 \u57522  23:11:33 \
aws_s3_bucket.mys3bucket: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_object.index: Refreshing state... [id=index.html]\
aws_s3_bucket_ownership_controls.bucketowner: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_object.error: Refreshing state... [id=error.html]\
aws_s3_bucket_public_access_block.access-block: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_object.profile1: Refreshing state... [id=profile1.png]\
aws_s3_object.profile3: Refreshing state... [id=profile3.png]\
aws_s3_object.profile2: Refreshing state... [id=profile2.png]\
aws_s3_bucket_acl.bucket-acl: Refreshing state... [id=mys3bucketproject2023,public-read]\
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  + create\
\
Terraform will perform the following actions:\
\
  # aws_s3_bucket_website_configuration.example will be created\
  + resource "aws_s3_bucket_website_configuration" "example" \{\
      + bucket           = "mys3bucketproject2023"\
      + id               = (known after apply)\
      + routing_rules    = (known after apply)\
      + website_domain   = (known after apply)\
      + website_endpoint = (known after apply)\
\
      + error_document \{\
          + key = "error.html"\
        \}\
\
      + index_document \{\
          + suffix = "index.html"\
        \}\
    \}\
\
Plan: 1 to add, 0 to change, 0 to destroy.\
aws_s3_bucket_website_configuration.example: Creating...\
aws_s3_bucket_website_configuration.example: Creation complete after 3s [id=mys3bucketproject2023]\
\
Apply complete! Resources: 1 added, 0 changed, 0 destroyed.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform apply -auto-approve                                                        \u57522  \u10004  \u57522  645 \u57522  23:15:13 \
aws_s3_bucket.mys3bucket: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_bucket_public_access_block.access-block: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_object.error: Refreshing state... [id=error.html]\
aws_s3_object.profile2: Refreshing state... [id=profile2.png]\
aws_s3_bucket_ownership_controls.bucketowner: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_object.profile3: Refreshing state... [id=profile3.png]\
aws_s3_object.index: Refreshing state... [id=index.html]\
aws_s3_object.profile1: Refreshing state... [id=profile1.png]\
aws_s3_bucket_acl.bucket-acl: Refreshing state... [id=mys3bucketproject2023,public-read]\
aws_s3_bucket_website_configuration.example: Refreshing state... [id=mys3bucketproject2023]\
\
Note: Objects have changed outside of Terraform\
\
Terraform detected the following changes made outside of Terraform since the last "terraform apply" which may have affected this plan:\
\
  # aws_s3_bucket.mys3bucket has changed\
  ~ resource "aws_s3_bucket" "mys3bucket" \{\
        id                          = "mys3bucketproject2023"\
        tags                        = \{\}\
      + website_endpoint            = "mys3bucketproject2023.s3-website-us-east-1.amazonaws.com"\
        # (10 unchanged attributes hidden)\
\
        # (4 unchanged blocks hidden)\
    \}\
\
\
Unless you have made equivalent changes to your configuration, or ignored the relevant attributes using ignore_changes, the following plan may include actions to undo or\
respond to these changes.\
\
\uc0\u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \u9472 \
\
Changes to Outputs:\
  + website_url = "mys3bucketproject2023.s3-website-us-east-1.amazonaws.com"\
\
You can apply this plan to save these new output values to the Terraform state, without changing any real infrastructure.\
\uc0\u9591 \
\uc0\u9474  Warning: Deprecated attribute\
\uc0\u9474  \
\uc0\u9474    on output.tf line 2, in output "website_url":\
\uc0\u9474     2:   value = aws_s3_bucket.mys3bucket.website_endpoint\
\uc0\u9474  \
\uc0\u9474  The attribute "website_endpoint" is deprecated. Refer to the provider documentation for details.\
\uc0\u9474  \
\uc0\u9474  (and one more similar warning elsewhere)\
\uc0\u9589 \
\
Apply complete! Resources: 0 added, 0 changed, 0 destroyed.\
\
Outputs:\
\
website_url = "mys3bucketproject2023.s3-website-us-east-1.amazonaws.com"\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  terraform destroy                                                                    \u57522  \u10004  \u57522  645 \u57522  23:20:58 \
aws_s3_bucket.mys3bucket: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_bucket_public_access_block.access-block: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_object.profile2: Refreshing state... [id=profile2.png]\
aws_s3_object.profile3: Refreshing state... [id=profile3.png]\
aws_s3_bucket_ownership_controls.bucketowner: Refreshing state... [id=mys3bucketproject2023]\
aws_s3_object.profile1: Refreshing state... [id=profile1.png]\
aws_s3_object.index: Refreshing state... [id=index.html]\
aws_s3_object.error: Refreshing state... [id=error.html]\
aws_s3_bucket_acl.bucket-acl: Refreshing state... [id=mys3bucketproject2023,public-read]\
aws_s3_bucket_website_configuration.example: Refreshing state... [id=mys3bucketproject2023]\
\
Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\
  - destroy\
\
Terraform will perform the following actions:\
\
  # aws_s3_bucket.mys3bucket will be destroyed\
  - resource "aws_s3_bucket" "mys3bucket" \{\
      - arn                         = "arn:aws:s3:::mys3bucketproject2023" -> null\
      - bucket                      = "mys3bucketproject2023" -> null\
      - bucket_domain_name          = "mys3bucketproject2023.s3.amazonaws.com" -> null\
      - bucket_regional_domain_name = "mys3bucketproject2023.s3.us-east-1.amazonaws.com" -> null\
      - force_destroy               = false -> null\
      - hosted_zone_id              = "Z3AQBSTGFYJSTF" -> null\
      - id                          = "mys3bucketproject2023" -> null\
      - object_lock_enabled         = false -> null\
      - region                      = "us-east-1" -> null\
      - request_payer               = "BucketOwner" -> null\
      - tags                        = \{\} -> null\
      - tags_all                    = \{\} -> null\
      - website_domain              = "s3-website-us-east-1.amazonaws.com" -> null\
      - website_endpoint            = "mys3bucketproject2023.s3-website-us-east-1.amazonaws.com" -> null\
\
      - grant \{\
          - permissions = [\
              - "READ",\
            ] -> null\
          - type        = "Group" -> null\
          - uri         = "http://acs.amazonaws.com/groups/global/AllUsers" -> null\
        \}\
      - grant \{\
          - id          = "8ca262d0cc91fdf253004aef39e9d246ad237abb87244abd1e082801e16919a3" -> null\
          - permissions = [\
              - "FULL_CONTROL",\
            ] -> null\
          - type        = "CanonicalUser" -> null\
        \}\
\
      - server_side_encryption_configuration \{\
          - rule \{\
              - bucket_key_enabled = false -> null\
\
              - apply_server_side_encryption_by_default \{\
                  - sse_algorithm = "AES256" -> null\
                \}\
            \}\
        \}\
\
      - versioning \{\
          - enabled    = false -> null\
          - mfa_delete = false -> null\
        \}\
\
      - website \{\
          - error_document = "error.html" -> null\
          - index_document = "index.html" -> null\
        \}\
    \}\
\
  # aws_s3_bucket_acl.bucket-acl will be destroyed\
  - resource "aws_s3_bucket_acl" "bucket-acl" \{\
      - acl    = "public-read" -> null\
      - bucket = "mys3bucketproject2023" -> null\
      - id     = "mys3bucketproject2023,public-read" -> null\
\
      - access_control_policy \{\
          - grant \{\
              - permission = "READ" -> null\
\
              - grantee \{\
                  - type = "Group" -> null\
                  - uri  = "http://acs.amazonaws.com/groups/global/AllUsers" -> null\
                \}\
            \}\
          - grant \{\
              - permission = "FULL_CONTROL" -> null\
\
              - grantee \{\
                  - display_name = "kensbabu" -> null\
                  - id           = "8ca262d0cc91fdf253004aef39e9d246ad237abb87244abd1e082801e16919a3" -> null\
                  - type         = "CanonicalUser" -> null\
                \}\
            \}\
          - owner \{\
              - display_name = "kensbabu" -> null\
              - id           = "8ca262d0cc91fdf253004aef39e9d246ad237abb87244abd1e082801e16919a3" -> null\
            \}\
        \}\
    \}\
\
  # aws_s3_bucket_ownership_controls.bucketowner will be destroyed\
  - resource "aws_s3_bucket_ownership_controls" "bucketowner" \{\
      - bucket = "mys3bucketproject2023" -> null\
      - id     = "mys3bucketproject2023" -> null\
\
      - rule \{\
          - object_ownership = "BucketOwnerPreferred" -> null\
        \}\
    \}\
\
  # aws_s3_bucket_public_access_block.access-block will be destroyed\
  - resource "aws_s3_bucket_public_access_block" "access-block" \{\
      - block_public_acls       = false -> null\
      - block_public_policy     = false -> null\
      - bucket                  = "mys3bucketproject2023" -> null\
      - id                      = "mys3bucketproject2023" -> null\
      - ignore_public_acls      = false -> null\
      - restrict_public_buckets = false -> null\
    \}\
\
  # aws_s3_bucket_website_configuration.example will be destroyed\
  - resource "aws_s3_bucket_website_configuration" "example" \{\
      - bucket           = "mys3bucketproject2023" -> null\
      - id               = "mys3bucketproject2023" -> null\
      - website_domain   = "s3-website-us-east-1.amazonaws.com" -> null\
      - website_endpoint = "mys3bucketproject2023.s3-website-us-east-1.amazonaws.com" -> null\
\
      - error_document \{\
          - key = "error.html" -> null\
        \}\
\
      - index_document \{\
          - suffix = "index.html" -> null\
        \}\
    \}\
\
  # aws_s3_object.error will be destroyed\
  - resource "aws_s3_object" "error" \{\
      - acl                    = "public-read" -> null\
      - arn                    = "arn:aws:s3:::mys3bucketproject2023/error.html" -> null\
      - bucket                 = "mys3bucketproject2023" -> null\
      - bucket_key_enabled     = false -> null\
      - content_type           = "text/html" -> null\
      - etag                   = "e945d8de38019c34a061034f586382ea" -> null\
      - force_destroy          = false -> null\
      - id                     = "error.html" -> null\
      - key                    = "error.html" -> null\
      - metadata               = \{\} -> null\
      - server_side_encryption = "AES256" -> null\
      - source                 = "error.html" -> null\
      - storage_class          = "STANDARD" -> null\
      - tags                   = \{\} -> null\
      - tags_all               = \{\} -> null\
    \}\
\
  # aws_s3_object.index will be destroyed\
  - resource "aws_s3_object" "index" \{\
      - acl                    = "public-read" -> null\
      - arn                    = "arn:aws:s3:::mys3bucketproject2023/index.html" -> null\
      - bucket                 = "mys3bucketproject2023" -> null\
      - bucket_key_enabled     = false -> null\
      - content_type           = "text/html" -> null\
      - etag                   = "f5f236e57fa1ecd0105ca0cbb30245b0" -> null\
      - force_destroy          = false -> null\
      - id                     = "index.html" -> null\
      - key                    = "index.html" -> null\
      - metadata               = \{\} -> null\
      - server_side_encryption = "AES256" -> null\
      - source                 = "index.html" -> null\
      - storage_class          = "STANDARD" -> null\
      - tags                   = \{\} -> null\
      - tags_all               = \{\} -> null\
    \}\
\
  # aws_s3_object.profile1 will be destroyed\
  - resource "aws_s3_object" "profile1" \{\
      - acl                    = "public-read" -> null\
      - arn                    = "arn:aws:s3:::mys3bucketproject2023/profile1.png" -> null\
      - bucket                 = "mys3bucketproject2023" -> null\
      - bucket_key_enabled     = false -> null\
      - content_type           = "application/octet-stream" -> null\
      - etag                   = "5dff22591fbf38f1d2ad6f22c2edd742" -> null\
      - force_destroy          = false -> null\
      - id                     = "profile1.png" -> null\
      - key                    = "profile1.png" -> null\
      - metadata               = \{\} -> null\
      - server_side_encryption = "AES256" -> null\
      - source                 = "profile1.png" -> null\
      - storage_class          = "STANDARD" -> null\
      - tags                   = \{\} -> null\
      - tags_all               = \{\} -> null\
    \}\
\
  # aws_s3_object.profile2 will be destroyed\
  - resource "aws_s3_object" "profile2" \{\
      - acl                    = "public-read" -> null\
      - arn                    = "arn:aws:s3:::mys3bucketproject2023/profile2.png" -> null\
      - bucket                 = "mys3bucketproject2023" -> null\
      - bucket_key_enabled     = false -> null\
      - content_type           = "application/octet-stream" -> null\
      - etag                   = "6870615f625cf255369c647657590959" -> null\
      - force_destroy          = false -> null\
      - id                     = "profile2.png" -> null\
      - key                    = "profile2.png" -> null\
      - metadata               = \{\} -> null\
      - server_side_encryption = "AES256" -> null\
      - source                 = "profile2.png" -> null\
      - storage_class          = "STANDARD" -> null\
      - tags                   = \{\} -> null\
      - tags_all               = \{\} -> null\
    \}\
\
  # aws_s3_object.profile3 will be destroyed\
  - resource "aws_s3_object" "profile3" \{\
      - acl                    = "public-read" -> null\
      - arn                    = "arn:aws:s3:::mys3bucketproject2023/profile3.png" -> null\
      - bucket                 = "mys3bucketproject2023" -> null\
      - bucket_key_enabled     = false -> null\
      - content_type           = "application/octet-stream" -> null\
      - etag                   = "d578172f7821cf764151e4213acd8c92" -> null\
      - force_destroy          = false -> null\
      - id                     = "profile3.png" -> null\
      - key                    = "profile3.png" -> null\
      - metadata               = \{\} -> null\
      - server_side_encryption = "AES256" -> null\
      - source                 = "profile3.png" -> null\
      - storage_class          = "STANDARD" -> null\
      - tags                   = \{\} -> null\
      - tags_all               = \{\} -> null\
    \}\
\
Plan: 0 to add, 0 to change, 10 to destroy.\
\
Changes to Outputs:\
  - website_url = "mys3bucketproject2023.s3-website-us-east-1.amazonaws.com" -> null\
\uc0\u9591 \
\uc0\u9474  Warning: Deprecated attribute\
\uc0\u9474  \
\uc0\u9474    on output.tf line 2, in output "website_url":\
\uc0\u9474     2:   value = aws_s3_bucket.mys3bucket.website_endpoint\
\uc0\u9474  \
\uc0\u9474  The attribute "website_endpoint" is deprecated. Refer to the provider documentation for details.\
\uc0\u9589 \
\
Do you really want to destroy all resources?\
  Terraform will destroy all your managed infrastructure, as shown above.\
  There is no undo. Only 'yes' will be accepted to confirm.\
\
  Enter a value: yes\
\
aws_s3_bucket_website_configuration.example: Destroying... [id=mys3bucketproject2023]\
aws_s3_object.profile1: Destroying... [id=profile1.png]\
aws_s3_object.profile2: Destroying... [id=profile2.png]\
aws_s3_object.index: Destroying... [id=index.html]\
aws_s3_object.error: Destroying... [id=error.html]\
aws_s3_object.profile3: Destroying... [id=profile3.png]\
aws_s3_object.error: Destruction complete after 2s\
aws_s3_object.profile1: Destruction complete after 2s\
aws_s3_object.profile2: Destruction complete after 2s\
aws_s3_object.index: Destruction complete after 2s\
aws_s3_object.profile3: Destruction complete after 2s\
aws_s3_bucket_website_configuration.example: Destruction complete after 2s\
aws_s3_bucket_acl.bucket-acl: Destroying... [id=mys3bucketproject2023,public-read]\
aws_s3_bucket_acl.bucket-acl: Destruction complete after 0s\
aws_s3_bucket_ownership_controls.bucketowner: Destroying... [id=mys3bucketproject2023]\
aws_s3_bucket_public_access_block.access-block: Destroying... [id=mys3bucketproject2023]\
aws_s3_bucket_ownership_controls.bucketowner: Destruction complete after 1s\
aws_s3_bucket_public_access_block.access-block: Destruction complete after 1s\
aws_s3_bucket.mys3bucket: Destroying... [id=mys3bucketproject2023]\
aws_s3_bucket.mys3bucket: Destruction complete after 1s\
\
Destroy complete! Resources: 10 destroyed.\
 kensbabu@Kenss-MacBook-Pro \uc0\u57520  ~/VS_scripts/mys3staticwebsite \u57520  \u57504  main \u9679  \u57520                                                                            \u57522  \u10004  \u57522  646 \u57522  23:28:30 }